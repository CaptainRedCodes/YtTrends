services:
  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_DB: youtube_trends
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user123
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d youtube_trends"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  web:
    build:
      context: .        # Build context
      dockerfile: app/Dockerfile   # Dockerfile relative to context (so ./app/Dockerfile)
      args:
        API_KEY: ${API_KEY}
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./app:/app_root/app
      - ./requirements.txt:/app_root/requirements.txt    # Mount the app directory (match your build context)
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+psycopg://user:user123@db:5432/youtube_trends
      YOUTUBE_API_KEY: ${YOUTUBE_API_KEY}
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 500s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"

volumes:
  db_data:
